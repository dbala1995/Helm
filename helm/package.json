{
  "name": "helm",
  "version": "0.0.1",
  "description": "Helm PHR",
  "main": "index.js",
  "scripts": {
    "debug": "node --inspect=0.0.0.0:9230 node_modules/moleculer/bin/moleculer-runner -e services",
    "dev": "moleculer-runner --repl --hot -e services",
    "start": "moleculer-runner -e services",
    "start:configuration": "node server/index",
    "k8s:cloud:dev:up": "gcloud config set project helm-development1 && gcloud auth configure-docker && npm run k8s:cloud:dev:build:helm-yhcr && npm run k8s:cloud:build:helm && npm run k8s:cloud:build:helm-configuration && npm run k8s:cloud:build:redis && npm run k8s:cloud:build:test && npm run k8s:cloud:build:helm-fhirstore && npm run k8s:cloud:build:rabbit && gcloud container clusters get-credentials --zone=europe-west2-a helm-cluster && kubectl create configmap helm-env --from-env-file run/k8s/dev/.env && kubectl create configmap fhirstore-env --from-env-file run/k8s/dev/fhirstore.env && kubectl create configmap fhirstore-dummy-env --from-env-file run/k8s/dev/fhirstore-dummy.env && kubectl apply -f run/k8s/dev && kubectl get all -l group=helm",
    "k8s:cloud:staging:up": "gcloud config set project helm-staging && gcloud auth configure-docker && npm run k8s:cloud:staging:build:helm-yhcr && npm run k8s:cloud:build:helm && npm run k8s:cloud:build:helm-configuration && npm run k8s:cloud:build:redis && npm run k8s:cloud:build:test && npm run k8s:cloud:build:helm-fhirstore && npm run k8s:cloud:build:rabbit && gcloud container clusters get-credentials --zone=europe-west2-a helm-cluster && kubectl create configmap helm-env --from-env-file run/k8s/staging/.env && kubectl create configmap fhirstore-env --from-env-file run/k8s/staging/fhirstore.env && kubectl create configmap fhirstore-dummy-env --from-env-file run/k8s/staging/fhirstore-dummy.env && kubectl apply -f run/k8s/staging && kubectl get all -l group=helm",
    "k8s:cloud:prod:up": "gcloud config set project helm-production1 && gcloud auth configure-docker && npm run k8s:cloud:prod:build:helm-yhcr && npm run k8s:cloud:build:helm && npm run k8s:cloud:build:helm-configuration && npm run k8s:cloud:build:redis && npm run k8s:cloud:build:helm-fhirstore && npm run k8s:cloud:build:rabbit && gcloud container clusters get-credentials --zone=europe-west2-a helm-cluster && kubectl create configmap helm-env --from-env-file run/k8s/prod/.env && kubectl create configmap fhirstore-env --from-env-file run/k8s/prod/fhirstore.env && kubectl create configmap fhirstore-dummy-env --from-env-file run/k8s/prod/fhirstore-dummy.env && kubectl apply -f run/k8s/prod && kubectl get all -l group=helm",
    "k8s:cloud:dev:down": "gcloud config set project helm-development1 && gcloud auth configure-docker && gcloud container clusters get-credentials --zone=europe-west2-a helm-cluster && kubectl delete configmap helm-env && kubectl delete configmap fhirstore-env && kubectl delete configmap fhirstore-dummy-env && kubectl delete all -l group=helm && kubectl get all",
    "k8s:cloud:staging:down": "gcloud config set project helm-staging && gcloud auth configure-docker && gcloud container clusters get-credentials --zone=europe-west2-a helm-cluster && kubectl delete configmap helm-env && kubectl delete configmap fhirstore-env && kubectl delete configmap fhirstore-dummy-env && kubectl delete all -l group=helm && kubectl get all",
    "k8s:cloud:prod:down": "gcloud config set project helm-production1 && gcloud auth configure-docker && gcloud container clusters get-credentials --zone=europe-west2-a helm-cluster && kubectl delete configmap helm-env && kubectl delete configmap fhirstore-env && kubectl delete configmap fhirstore-dummy-env && kubectl delete all -l group=helm && kubectl get all",
    "k8s:cloud:dev:build:helm-yhcr": "docker build --no-cache -f ./run/k8s/dev/YhcrDockerfile -t helm-yhcr ./run/k8s/dev && docker tag helm-yhcr eu.gcr.io/helm-management/helm-yhcr:1.0.0-dev && docker push eu.gcr.io/helm-management/helm-yhcr:1.0.0-dev",
    "k8s:cloud:staging:build:helm-yhcr": "docker build --no-cache -f ./run/k8s/dev/YhcrDockerfile -t helm-yhcr ./run/k8s/staging && docker tag helm-yhcr eu.gcr.io/helm-management/helm-yhcr:1.0.0-staging && docker push eu.gcr.io/helm-management/helm-yhcr:1.0.0-staging",
    "k8s:cloud:prod:build:helm-yhcr": "docker build --no-cache -f ./run/k8s/dev/YhcrDockerfile -t helm-yhcr ./run/k8s/prod && docker tag helm-yhcr eu.gcr.io/helm-management/helm-yhcr:1.0.0-prod && docker push eu.gcr.io/helm-management/helm-yhcr:1.0.0-prod",
    "k8s:cloud:build:helm": "docker build --no-cache -t helm . && docker tag helm eu.gcr.io/helm-management/helm:1.0.0 && docker push eu.gcr.io/helm-management/helm:1.0.0",
    "k8s:cloud:build:helm-configuration": "docker build --no-cache -t helm-configuration ./server && docker tag helm-configuration eu.gcr.io/helm-management/helm-configuration:1.0.0 && docker push eu.gcr.io/helm-management/helm-configuration:1.0.0",
    "k8s:cloud:build:redis": "docker build --no-cache -f RedisDockerfile -t helm-redis . && docker tag helm-redis eu.gcr.io/helm-management/helm-redis:1.0.0 && docker push eu.gcr.io/helm-management/helm-redis:1.0.0",
    "k8s:cloud:build:rabbit": "docker build --no-cache -f RabbitDockerfile -t helm-rabbit . && docker tag helm-rabbit eu.gcr.io/helm-management/helm-rabbit:1.0.0 && docker push eu.gcr.io/helm-management/helm-rabbit:1.0.0",
    "k8s:cloud:build:test": "docker build --no-cache -f test/TestDockerfile -t helm-test ./test && docker tag helm-test eu.gcr.io/helm-management/helm-test:1.0.0 && docker push eu.gcr.io/helm-management/helm-test:1.0.0",
    "k8s:cloud:build:helm-fhirstore": "docker pull synaneticsltd/synfhir-store:linux-v2.8.3 && docker tag synaneticsltd/synfhir-store:linux-v2.8.3 helm-fhirstore && docker tag helm-fhirstore eu.gcr.io/helm-management/helm-fhirstore:1.0.0 && docker push eu.gcr.io/helm-management/helm-fhirstore:1.0.0",
    "cr:cloud:dev:up": "gcloud config set project helm-development1 && gcloud auth configure-docker && npm run cr:cloud:dev:up:redis && npm run cr:cloud:dev:up:rabbit && npm run cr:cloud:dev:up:test && npm run cr:cloud:dev:up:fhirstore && npm run cr:cloud:dev:up:helm",
    "cr:cloud:dev:up:helm": "docker build --no-cache -t helm . && docker tag helm eu.gcr.io/helm-management/helm:1.0.0 && docker push eu.gcr.io/helm-management/helm:1.0.0 && gcloud beta run services replace ./run/cr/dev/helm.deployment.yml --platform managed --region europe-west2",
    "cr:cloud:dev:up:redis": "docker build --no-cache -f ./run/cr/dev/RedisDockerfile -t helm-redis . && docker tag helm-redis eu.gcr.io/helm-management/helm-redis:1.0.0 && docker push eu.gcr.io/helm-management/helm-redis:1.0.0 && gcloud beta run services replace ./run/cr/dev/helm-redis.deployment.yml --platform managed --region europe-west2",
    "cr:cloud:dev:up:rabbit": "docker build --no-cache -f RabbitDockerfile -t helm-rabbit . && docker tag helm-rabbit eu.gcr.io/helm-management/helm-rabbit:1.0.0 && docker push eu.gcr.io/helm-management/helm-rabbit:1.0.0 && gcloud beta run services replace ./run/cr/dev/helm-redis.deployment.yml --platform managed --region europe-west2",
    "cr:cloud:dev:up:test": "docker build --no-cache -f test/TestDockerfile -t helm-test ./test && docker tag helm-test eu.gcr.io/helm-management/helm-test:1.0.0 && docker push eu.gcr.io/helm-management/helm-test:1.0.0 && gcloud beta run services replace ./run/cr/dev/helm-test.deployment.yml --platform managed --region europe-west2",
    "cr:cloud:dev:up:fhirstore": "docker build --no-cache -t helm-fhirstore ../synfhir-store && docker tag helm-fhirstore eu.gcr.io/helm-management/helm-fhirstore:1.0.0 && docker push eu.gcr.io/helm-management/helm-fhirstore:1.0.0 && gcloud beta run services replace ./run/cr/dev/helm-fhir.deployment.yml --platform managed --region europe-west2"
  },
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@types/fhir": "^0.0.31",
    "@types/winston": "^2.4.4",
    "eslint": "^6.8.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-prettier": "^3.1.3",
    "express": "^4.17.1",
    "moleculer-repl": "^0.6.4",
    "prettier": "^2.0.5"
  },
  "dependencies": {
    "@google-cloud/logging": "^8.0.8",
    "@google-cloud/secret-manager": "^3.1.0",
    "amqplib": "^0.5.6",
    "cookie-parser": "^1.4.5",
    "cron": "^1.8.2",
    "detect-browser": "^5.2.0",
    "dotenv": "^8.2.0",
    "google-gax": "^2.9.1",
    "ioredis": "^4.17.3",
    "is-localhost-ip": "^1.4.0",
    "jose": "^1.28.1",
    "jsonwebtoken": "^8.5.1",
    "jwt-simple": "^0.5.6",
    "maxmind": "^4.3.1",
    "moleculer": "^0.14.6",
    "moleculer-web": "^0.9.1",
    "moment": "^2.29.1",
    "oidc-provider": "^6.26.0",
    "openid-client": "^3.15.0",
    "passport": "^0.4.1",
    "passport-jwt": "^4.0.0",
    "pem-jwk": "^2.0.0",
    "pg": "^8.2.1",
    "redis": "^3.1.1",
    "request": "^2.88.2",
    "request-ip": "^2.1.3",
    "request-promise-native": "^1.0.8",
    "sequelize": "^5.21.12",
    "swagger-ui-dist": "^3.28.0",
    "uuid": "^8.1.0",
    "winston": "^3.2.1",
    "winston-daily-rotate-file": "^4.4.2"
  }
}